@model IEnumerable<MarketPlaceProject.Models.ItemDTO>
@{
    ViewBag.Title = "Result";
    Layout = "~/Views/Shared/_LayoutWithSearchFluid.cshtml";
}


<div class="row">
    <div class="col-md-3">
        @Html.Partial("_Filter")
    </div>
    <div class="col">
        <div class="row">
            @Html.Partial("_Breadcrumb")
        </div>
        <div class="row">
            @foreach (var product in Model)
            {
                <div class="col-md-6 col-lg-4 col-xxl-3 mb-4">
                    <div class="card">
                        <img src="@Url.Content(product.ImageUrl)" class="card-img-top img-fluid" alt="Product Image" style="height: 15vw; object-fit: cover;">


                        <div class="card-body text-center">
                            <h6 class="card-title">@product.Manufacturer</h6>
                            <h6 class="card-subtitle text-muted">@product.Series Series</h6>
                            <h6 class="card-subtitle text-muted mb-3">@product.Model</h6>
                            <p class="card-text m-0">Power (W): @product.Power</p>
                            <p class="card-text m-0">Height (in): @product.Height</p>
                            <p class="card-text">Weight (lbs): @product.Weight</p>
                            <div class="d-flex justify-content-between">
                                <div class="form-check">
                                    <input class="form-check-input compare-check" type="checkbox" value=@product.ID id="flexCheckDefault">
                                    <label class="form-check-label" for="flexCheckDefault">
                                        Compare
                                    </label>
                                </div>
                                @Html.ActionLink("View Details", "ProductSummary", new { id = product.ID, subcategoryName = ViewBag.SubcategoryName }, new { @class = "btn btn-primary" })
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

@section scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>
        $(document).ready(function () {
            $(document).on('click', '#clearFilters', function () {
                // Example: Clearing input fields
                $('input[type="number"], input[type="text"]').val('');
                $('input[type="checkbox"]').prop('checked', false);
            });
        });
    </script>

    <script>
        $(document).ready(function () {
            // Event handler for the "Compare" button click
            $('#compareButton').click(function () {
                // Array to store the IDs of selected items
                var selectedItems = [];

                // Loop through all checkboxes with class "form-check-input"
                $('.compare-check').each(function () {
                    // If the checkbox is checked, add its value (item ID) to the selectedItems array
                    if ($(this).is(':checked')) {
                        selectedItems.push($(this).val());
                    }
                });

                // Check if the number of selected items is within the required range
                if (selectedItems.length < 2 || selectedItems.length > 4) {
                    alert('Please select at least 2 and at most 4 items to compare.');
                    return; // Exit the function if the number of selected items is invalid
                }


                var subcategoryName = '@ViewBag.SubcategoryName'; // Get the subcategory name from ViewBag
                window.location.href = '@Url.Action("Compare", "Home")' + '?subcategoryName=' + encodeURIComponent(subcategoryName) + '&itemIds=' + selectedItems.join(',');
            });
        });
    </script>
    <script>
        $(document).ready(function () {
            $('.use-type-checkbox').on('change', function () {
                // When any checkbox is clicked
                $('.use-type-checkbox').not(this).prop('checked', false); // Uncheck all other checkboxes
            });
        });
    </script>

    <script>
        $(".sort-button").click(function () {
            var sortField = $(this).data("sort");
            var currentSortOrder = $("#sortOrder").val();
            var newSortOrder = "";

            // Debugging
            console.log("Current Sort Order:", currentSortOrder);

            // Determine the new sort order based on the current value
            if (currentSortOrder === sortField + "Asc") {
                newSortOrder = sortField + "Desc";
            } else {
                newSortOrder = sortField + "Asc";
            }

            // Debugging
            console.log("New Sort Order:", newSortOrder);

            $("#sortOrder").val(newSortOrder); // Update the hidden input's value
            $("form").submit(); // Submit the form with the new sort order
        });

    </script>


}

